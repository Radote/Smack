name: Build Executable for Multiple OSes

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }} # Default runner for Linux

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest] # Target OSs

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Make sure PyInstaller is installed

      - name: Build executable with PyInstaller
        run: |
          if [ $RUNNER_OS = 'Linux' ]; then
            pyinstaller --onefile --distpath ./dist/ubuntu-latest --add-data "smack.qml:." --add-data "images/*:images" smack.py
            # Set execute permissions for the Linux executable
            chmod +x ./dist/ubuntu-latest/smack
          elif [ $RUNNER_OS = 'Windows' ]; then
            pyinstaller --onefile --icon=images/icon.png --distpath ./dist/windows-latest --add-data "smack.qml;." --add-data "images/*;images" smack.py
          elif [ $RUNNER_OS = 'macOS' ]; then
            pyinstaller --onefile --icon=images/icon.png --distpath ./dist/macos-latest --add-data "smack.qml:." --add-data "images/*:images" smack.py
          fi

      - name: Upload Executable as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: executable-${{ matrix.os }}
          path: |
            ${{ runner.os == 'Linux' && './dist/ubuntu-latest/smack' || '' }}
            ${{ runner.os == 'Windows' && './dist/windows-latest/smack.exe' || '' }}
            ${{ runner.os == 'macOS' && './dist/macos-latest/smack.app' || '' }}
